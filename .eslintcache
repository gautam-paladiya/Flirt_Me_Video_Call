[{"D:\\React\\JS\\Flirt_Me_Video_Call\\src\\index.js":"1","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\App.js":"2","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\pages\\ContactPage.js":"3","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\Components\\LoginRegisterComponent.js":"4","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\Components\\ComponentAuthButton.js":"5","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\utils\\AxiosInstance.js":"6","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\store\\index.js":"7","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\store\\reducers\\index.js":"8","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\store\\reducers\\CallingReducer.js":"9","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\store\\CallingAction.js":"10","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\pages\\VideoCallPage\\index.js":"11","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\pages\\VideoCallPage\\SelectGenderComponent.js":"12","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\pages\\VideoCallPage\\TermsComponent.js":"13","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\Components\\ComponentFacebookButton.js":"14","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\Components\\ComponentGoogleButton.js":"15","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\Components\\ComponentEmailButton.js":"16","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\pages\\VideoCallPage\\SelectCountryComponent.js":"17","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\pages\\VideoCallPage\\SelectCGenderComponent.js":"18","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\pages\\VideoCallPage\\ProfileDialogComponent.js":"19","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\Components\\ComponentCheckoutForm.js":"20","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\serviceWorkerRegistration.js":"21","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\utils\\LogHelper.js":"22","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\pages\\VideoCallPage\\CamNotFoundDialogComponent.js":"23"},{"size":497,"mtime":1614905384180,"results":"24","hashOfConfig":"25"},{"size":462,"mtime":1614809709860,"results":"26","hashOfConfig":"25"},{"size":123,"mtime":1614809709934,"results":"27","hashOfConfig":"25"},{"size":2844,"mtime":1615120875776,"results":"28","hashOfConfig":"25"},{"size":663,"mtime":1614809709861,"results":"29","hashOfConfig":"30"},{"size":155,"mtime":1614809710027,"results":"31","hashOfConfig":"25"},{"size":226,"mtime":1614809709985,"results":"32","hashOfConfig":"25"},{"size":187,"mtime":1614809709987,"results":"33","hashOfConfig":"25"},{"size":1010,"mtime":1614954764135,"results":"34","hashOfConfig":"25"},{"size":783,"mtime":1614954801140,"results":"35","hashOfConfig":"25"},{"size":26057,"mtime":1615129177541,"results":"36","hashOfConfig":"25"},{"size":1418,"mtime":1615129299149,"results":"37","hashOfConfig":"25"},{"size":1056,"mtime":1615128917306,"results":"38","hashOfConfig":"25"},{"size":1562,"mtime":1615122002128,"results":"39","hashOfConfig":"25"},{"size":1519,"mtime":1615122014294,"results":"40","hashOfConfig":"25"},{"size":5660,"mtime":1615120660039,"results":"41","hashOfConfig":"25"},{"size":1212,"mtime":1615129209032,"results":"42","hashOfConfig":"25"},{"size":2290,"mtime":1615125114888,"results":"43","hashOfConfig":"25"},{"size":2878,"mtime":1615124878636,"results":"44","hashOfConfig":"25"},{"size":720,"mtime":1614809709861,"results":"45","hashOfConfig":"25"},{"size":5064,"mtime":1614905308777,"results":"46","hashOfConfig":"25"},{"size":170,"mtime":1615118021925,"results":"47","hashOfConfig":"25"},{"size":968,"mtime":1615125421553,"results":"48","hashOfConfig":"25"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},"1r9l0os",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1yfzlo3",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"52"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"D:\\React\\JS\\Flirt_Me_Video_Call\\src\\index.js",["110"],"import $ from \"jquery\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"./flag.css\";\r\nimport \"./tailwind.output.css\";\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\n\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorkerRegistration.register();\r\n",["111","112"],"D:\\React\\JS\\Flirt_Me_Video_Call\\src\\App.js",[],"D:\\React\\JS\\Flirt_Me_Video_Call\\src\\pages\\ContactPage.js",[],"D:\\React\\JS\\Flirt_Me_Video_Call\\src\\Components\\LoginRegisterComponent.js",["113"],"import React from \"react\";\r\nimport { FaFacebook, FaUserAlt } from \"react-icons/fa\";\r\nimport ComponentFacebookButton from \"./ComponentFacebookButton\";\r\nimport ComponentGoogleButton from \"./ComponentGoogleButton\";\r\nimport ComponentEmailButton from \"./ComponentEmailButton\";\r\nimport { connect } from \"react-redux\";\r\nimport GoogleIcon from \"../assets/images/google.png\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nfunction LoginRegisterComponent(props) {\r\n  const { display, onClose } = props;\r\n\r\n  return (\r\n    <Modal show={display} onHide={onClose}>\r\n      <div className=\"m-0 p-5 w-full h-full items-center flex flex-col\">\r\n        <div className=\"flex flex-col items-center w-full \">\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              <h1 className=\"text-3xl text-center mb-4 font-bold text-blue-600 \">\r\n                Itâ€™s Easy to Join {process.env.REACT_APP_NAME}, Get Started Now\r\n              </h1>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <ComponentFacebookButton>\r\n            <div\r\n              className=\"group p-2 px-2 m-2 mx-3 cursor-pointer flex flex-row w-72 items-center justify-around bg-indigo-800 hover:bg-indigo-900 rounded-md focus:ring-2 focus:ring-blue-600 hover:shadow-lg \"\r\n              onClick={() => {\r\n                onClose();\r\n              }}\r\n            >\r\n              <FaFacebook className=\"w-8 h-8 text-white\" />\r\n              <div className=\"text-lg text-white font-semibold uppercase group-hover:scale-105\">\r\n                Continue with Facebook\r\n              </div>\r\n            </div>\r\n          </ComponentFacebookButton>\r\n\r\n          <ComponentGoogleButton>\r\n            <div\r\n              className=\"group p-2 m-2 mx-3 cursor-pointer flex flex-row w-72 items-center justify-around bg-red-600 hover:bg-red-700 rounded-md focus:ring-2 focus:ring-blue-600 hover:shadow-lg \"\r\n              onClick={() => {\r\n                onClose();\r\n              }}\r\n            >\r\n              <img\r\n                src={GoogleIcon}\r\n                className=\"w-8 h-8  group-hover:text-white\"\r\n              />\r\n              <div className=\"text-lg text-white font-semibold uppercase  scale-150\">\r\n                Continue with Google\r\n              </div>\r\n            </div>\r\n          </ComponentGoogleButton>\r\n          <div className=\"text-2xl text-gray-800 font-bold\">OR</div>\r\n          <ComponentEmailButton onClose={onClose} />\r\n        </div>\r\n\r\n        <div className=\"flex flex-row items-center mt-2\">\r\n          <FaUserAlt size={15} color=\"black\" />\r\n          <p>\r\n            {\"  \"}\r\n            <span className=\"text-sm font-bold ml-2\">989 222</span>\r\n            {\"  \"}joined {process.env.REACT_APP_NAME}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default connect()(LoginRegisterComponent);\r\n","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\Components\\ComponentAuthButton.js",[],["114","115"],"D:\\React\\JS\\Flirt_Me_Video_Call\\src\\utils\\AxiosInstance.js",[],"D:\\React\\JS\\Flirt_Me_Video_Call\\src\\store\\index.js",[],"D:\\React\\JS\\Flirt_Me_Video_Call\\src\\store\\reducers\\index.js",[],"D:\\React\\JS\\Flirt_Me_Video_Call\\src\\store\\reducers\\CallingReducer.js",[],"D:\\React\\JS\\Flirt_Me_Video_Call\\src\\store\\CallingAction.js",[],"D:\\React\\JS\\Flirt_Me_Video_Call\\src\\pages\\VideoCallPage\\index.js",["116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137"],"import React, { Component } from \"react\";\r\nimport { countries } from \"countries-list\";\r\n\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"peerjs\";\r\nimport { FaPlay, FaGlobe, FaCaretDown } from \"react-icons/fa\";\r\n\r\nimport { BsGearFill } from \"react-icons/bs\";\r\nimport {\r\n  FaArrowRight,\r\n  FaRegStopCircle,\r\n  FaArrowAltCircleRight,\r\n} from \"react-icons/fa\";\r\nimport {\r\n  CompleteConnected,\r\n  GoOffline,\r\n  GoOnline,\r\n  StartConnecting,\r\n  StartWaiting,\r\n  StopConnecting,\r\n  CONNECTED,\r\n  NotConnected,\r\n} from \"../../store/CallingAction\";\r\nimport { connect } from \"react-redux\";\r\nimport SelectGenderComponent from \"./SelectGenderComponent\";\r\nimport TermsComponent from \"./TermsComponent\";\r\nimport LoginRegisterComponent from \"../../Components/LoginRegisterComponent\";\r\nimport MaleIcon from \"../../assets/images/malel.png\";\r\nimport FemaleIcon from \"../../assets/images/femalel.png\";\r\nimport GenOIcon from \"../../assets/images/genderO.png\";\r\nimport SelectCountryComponent from \"./SelectCountryComponent\";\r\nimport SelectCGenderComponent from \"./SelectCGenderComponent\";\r\nimport ProfileDialogComponent from \"./ProfileDialogComponent\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport ComponentCheckoutForm from \"../../Components/ComponentCheckoutForm\";\r\nimport GoogleIcon from \"../../assets/images/google.png\";\r\nimport { FaFacebook, FaEnvelope } from \"react-icons/fa\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport AxiosInstance from \"../../utils/AxiosInstance\";\r\nimport ComponentFacebookButton from \"../../Components/ComponentFacebookButton\";\r\nimport ComponentGoogleButton from \"../../Components/ComponentGoogleButton\";\r\nimport cookie from \"react-cookies\";\r\nimport LogHelper from \"../../utils/LogHelper\";\r\nimport CamNotFoundDialogComponent from \"./CamNotFoundDialogComponent\";\r\n\r\nconst stripePromise = loadStripe(\"pk_test_6pRNASCoBOKtIshFeQd4XMUh\");\r\nconst CALLER = \"CALLER\";\r\nconst RECEIVER = \"RECEIVER\";\r\n\r\nexport class VideoCallPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      gender: localStorage.getItem(\"gender\"),\r\n      terms: localStorage.getItem(\"terms\") == \"true\" ? true : false,\r\n      genderModal: false,\r\n      profileModal: false,\r\n      country: localStorage.getItem(\"country\"),\r\n      anchorEl: null,\r\n      camNotFound: false,\r\n      showCameraDialog: false,\r\n      showGenderDialog: false,\r\n      showProfileDialog: false,\r\n      showCGenderDialog: false,\r\n      showTermsPopper: false,\r\n      showGenderPopper: false,\r\n      showLoginRegister: false,\r\n      showCountrySelect: false,\r\n      showAlerDisconnect: false,\r\n      cGender: localStorage.getItem(\"cGender\") || \"OTHER\",\r\n      cCountry: localStorage.getItem(\"cCountry\") || \"GLOBAL\",\r\n      client: {},\r\n      type: CALLER,\r\n    };\r\n    this.termRef = React.createRef();\r\n  }\r\n\r\n  token = cookie.load(\"id\");\r\n\r\n  getStream = (audio = true, video = true) => {\r\n    try {\r\n      const stream = navigator.mediaDevices\r\n        .getUserMedia({\r\n          video: video,\r\n          audio: audio,\r\n        })\r\n        .then((stream) => {\r\n          return stream;\r\n        })\r\n        .catch((err) => {\r\n          console.log(`erro ${err}`);\r\n          return;\r\n        });\r\n      return stream;\r\n    } catch (error) {\r\n      console.log(`error ${error}`);\r\n      return;\r\n    }\r\n  };\r\n\r\n  initVideo = async () => {\r\n    var stream = await this.getStream(false, true);\r\n    console.log(`${stream}`);\r\n    if (stream) {\r\n      this.remoteVideo.srcObject = stream;\r\n\r\n      console.log(\"cam found\");\r\n      await this.setState({ ...this.state, camNotFound: false });\r\n    } else {\r\n      console.log(\"cam not found\");\r\n      await this.setState({\r\n        ...this.state,\r\n        camNotFound: true,\r\n        showCameraDialog: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (typeof this.state.country == \"undefined\" || !this.state.country) {\r\n      AxiosInstance.get(\"getCountry\").then((res) => {\r\n        console.log(`country ${JSON.stringify(res)}`);\r\n        if (res.data.geoplugin_status == 200) {\r\n          this.setState(\r\n            { ...this.state, country: res.data.geoplugin_countryCode },\r\n            () => {\r\n              localStorage.setItem(\"country\", res.data.geoplugin_countryCode);\r\n            }\r\n          );\r\n        } else {\r\n          this.setState({ ...this.state, country: \"US\" }, () => {\r\n            localStorage.setItem(\"country\", \"US\");\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  setGender = () => {\r\n    if (this.state.gender) {\r\n      this.socket.emit(\"setGender\", {\r\n        gender: this.state.gender,\r\n      });\r\n    }\r\n  };\r\n\r\n  setCountry = () => {\r\n    if (this.state.country) {\r\n      this.socket.emit(\"setCountry\", { country: this.state.country });\r\n    }\r\n  };\r\n\r\n  showAlert = () => {\r\n    this.setState({ ...this.state, showAlerDisconnect: true });\r\n\r\n    setTimeout(() => {\r\n      this.setState({ ...this.state, showAlerDisconnect: false });\r\n    }, 5000);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.remoteVideo = document.getElementById(\"remote-video\");\r\n    this.localVideo = document.getElementById(\"local-video\");\r\n    this.initVideo();\r\n\r\n    console.log(`${process.env.REACT_APP_SOCKET_CONNECTION_STRING}`);\r\n    this.socket = io(`${process.env.REACT_APP_SOCKET_CONNECTION_STRING}`);\r\n\r\n    this.peer = new Peer({\r\n      config: {\r\n        iceServers: [\r\n          { url: \"stun:stun.l.google.com:19302\" },\r\n          { url: \"stun:stunserver.org\" },\r\n        ],\r\n      },\r\n    });\r\n\r\n    this.socket.on(\"connect\", () => {\r\n      console.log(`socket connect id ${this.socket.id} ${this.state.country} `);\r\n    });\r\n\r\n    this.socket.on(\"yourID\", () => {\r\n      this.setCountry();\r\n      this.setGender();\r\n    });\r\n\r\n    this.socket.on(\"requestCall\", async (arg, callback) => {\r\n      this.props.dispatch(StartConnecting());\r\n      this.setState({ ...this.state, type: RECEIVER });\r\n      this.dataConnection = await this.peer.connect(arg.peerId);\r\n\r\n      this.dataConnection.on(\"open\", async (clientPeerId) => {\r\n        this.props.dispatch(CompleteConnected());\r\n\r\n        this.socket.emit(\"userConnected\", {\r\n          connectedTo: arg.socketId,\r\n        });\r\n\r\n        this.mediaConnection = await this.peer.call(\r\n          this.dataConnection.peer,\r\n          await this.getStream(true, true)\r\n        );\r\n        this.mediaConnection.on(\"stream\", async (remoteStream) => {\r\n          // Show stream in some <video> element.\r\n          this.remoteVideo.srcObject = remoteStream;\r\n          this.localVideo.srcObject = await this.getStream(false, true);\r\n        });\r\n        this.mediaConnection.on(\"close\", () => {\r\n          console.log(\"media close\");\r\n        });\r\n      });\r\n\r\n      // Receive messages\r\n      this.dataConnection.on(\"data\", (data) => {\r\n        console.log(\"Received\", data);\r\n      });\r\n      this.dataConnection.on(\"close\", async () => {\r\n        console.log(\"conn close\");\r\n\r\n        if (this.props.calling.isActive) {\r\n          this.DisconnectRemote();\r\n          this.showAlert();\r\n          this.startConnecting();\r\n        }\r\n        // await setisActive(true);\r\n        // this.DisconnectCall();\r\n      });\r\n    });\r\n\r\n    this.socket.on(\"afterConnect\", (client) => {\r\n      console.log(`after connect ${client}`);\r\n      this.setState({\r\n        ...this.state,\r\n        client: client,\r\n        showAlerDisconnect: false,\r\n      });\r\n    });\r\n\r\n    this.peer.on(\"open\", (id) => {\r\n      console.log(\"My peer ID is: \" + id);\r\n    });\r\n\r\n    this.peer.on(\"connection\", (conn) => {\r\n      console.log(`peer connected ${JSON.stringify(conn.open)}`);\r\n      this.props.dispatch(CompleteConnected());\r\n      // this.socket.emit(\"userConnected\", {\r\n      //   connectedTo: this.socket.id,\r\n      // });\r\n      this.dataConnection = conn;\r\n\r\n      this.dataConnection.on(\"data\", (data) => {\r\n        // Will print 'hi!'\r\n        console.log(data);\r\n      });\r\n      this.dataConnection.on(\"open\", () => {\r\n        console.log(\"peer open\");\r\n        // conn.send({ peerId: this.peer.id });\r\n      });\r\n      this.dataConnection.on(\"close\", async () => {\r\n        console.log(\"conns close\");\r\n        // await setisActive(true);\r\n        // this.DisconnectCall();\r\n        if (this.props.calling.isActive) {\r\n          this.DisconnectRemote();\r\n          this.showAlert();\r\n          this.startConnecting();\r\n        }\r\n      });\r\n    });\r\n\r\n    this.peer.on(\"call\", async (call) => {\r\n      this.mediaConnection = call;\r\n      this.mediaConnection.answer(await this.getStream(true, true)); // Answer the call with an A/V stream.\r\n      this.mediaConnection.on(\"stream\", async (remoteStream) => {\r\n        // Show stream in some <video> element.\r\n        this.remoteVideo.srcObject = remoteStream;\r\n        this.localVideo.srcObject = await this.getStream(false, true);\r\n\r\n        // remoteVideo.load();\r\n        // remoteVideo.play();\r\n      });\r\n      this.mediaConnection.on(\"close\", () => {\r\n        console.log(\"medias close\");\r\n        // disconnect();\r\n      });\r\n    });\r\n\r\n    this.peer.on(\"error\", (errr) => {\r\n      console.log(`peer erro ${JSON.stringify(errr)}`);\r\n    });\r\n\r\n    this.peer.on(\"close\", () => {\r\n      console.log(\"peer close\");\r\n      // disconnect();\r\n      // this.peer.disconnect();\r\n    });\r\n\r\n    this.peer.on(\"error\", (err) => {\r\n      console.log(`peer erro ${err.type}`);\r\n    });\r\n\r\n    this.peer.on(\"disconnected\", () => {\r\n      console.log(\"peer disconnected\");\r\n\r\n      this.socket.emit(\r\n        \"disconnected\",\r\n        { isAvailable: this.props.calling.isActive },\r\n        async (res) => {\r\n          this.props.dispatch(StopConnecting());\r\n          console.log(\"database disconnected \", this.props.calling.isActive);\r\n          if (this.props.calling.isActive) {\r\n            this.startConnecting();\r\n          }\r\n        }\r\n      );\r\n    });\r\n    window.addEventListener(\"load\", function () {\r\n      window.scrollTo(0, 1);\r\n    });\r\n    window.addEventListener(\r\n      \"blur\",\r\n      () => {\r\n        this.doSomethingBeforeUnload();\r\n      },\r\n      false\r\n    );\r\n    window.addEventListener(\"beforeunload\", (ev) => {\r\n      ev.preventDefault();\r\n      return this.doSomethingBeforeUnload();\r\n    });\r\n\r\n    console.log(`NODE ${process.env.NODE_ENV}`);\r\n  }\r\n  // componentDidUpdate(prevProps, preState) {\r\n  //   // console.log(`update ${this.peer.disconnected}`);\r\n  //   // console.log(`update ${JSON.stringify(prevProps)}`);\r\n  //   // console.log(`update ${JSON.stringify(preState)}`);\r\n  // }\r\n\r\n  doSomethingBeforeUnload = async () => {\r\n    await this.props.dispatch(GoOffline());\r\n    this.DisconnectCall();\r\n  };\r\n\r\n  setupBeforeUnloadListener = () => {};\r\n\r\n  startConnecting = () => {\r\n    if (this.state.camNotFound) {\r\n      this.setState({ ...this.state, showCameraDialog: true });\r\n      return;\r\n    }\r\n    if (!this.state.terms) {\r\n      this.setState({ ...this.state, showTermsPopper: true });\r\n      return;\r\n    }\r\n    if (!this.state.gender || typeof this.state.gender == \"undefined\") {\r\n      this.setState({ ...this.state, showGenderDialog: true });\r\n      return;\r\n    }\r\n\r\n    // this.handleLoginRegisterDialog();\r\n\r\n    console.log(\"start connecting \", this.peer.id);\r\n    this.props.dispatch(GoOnline());\r\n    this.socket.emit(\r\n      \"start\",\r\n      {\r\n        peerId: this.peer.id,\r\n      },\r\n      (response) => {\r\n        console.log(response.message);\r\n\r\n        if (response.userFound) {\r\n          this.props.dispatch(StartConnecting());\r\n        } else {\r\n          this.props.dispatch(StartWaiting());\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  DisconnectRemote = () => {\r\n    this.dataConnection.close();\r\n    this.mediaConnection.close();\r\n    // this.peer.disconnect();\r\n    this.initVideo();\r\n    this.socket.emit(\r\n      \"disconnected\",\r\n      { isAvailable: this.props.calling.isActive },\r\n      (res) => {\r\n        this.props.dispatch(StopConnecting());\r\n        console.log(\"database dis connected \", this.props.calling.isActive);\r\n        this.setState({ ...this.state, client: {} });\r\n      }\r\n    );\r\n  };\r\n\r\n  DisconnectCall = () => {\r\n    if (this.props.calling.connected) {\r\n      console.log(\"con found\");\r\n      this.dataConnection.close();\r\n      this.mediaConnection.close();\r\n      // this.peer.disconnect();\r\n      this.initVideo();\r\n    }\r\n    this.props.dispatch(StopConnecting());\r\n\r\n    this.socket.emit(\r\n      \"disconnected\",\r\n      { isAvailable: this.props.calling.isActive },\r\n      (res) => {\r\n        console.log(\"User did disconnect\", this.props.calling.isActive);\r\n      }\r\n    );\r\n  };\r\n\r\n  toggleGender = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      showGenderDialog: !this.state.showGenderDialog,\r\n    });\r\n  };\r\n\r\n  handleSelectGender = (val) => {\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        gender: val,\r\n        showGenderDialog: !this.state.showGenderDialog,\r\n      },\r\n      () => {\r\n        localStorage.setItem(\"gender\", val);\r\n        this.setGender();\r\n      }\r\n    );\r\n  };\r\n\r\n  handleChangeTerms = (e) => {\r\n    console.log(e);\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        terms: e.target.checked,\r\n        showTermsPopper: !e.target.checked,\r\n      },\r\n      (newState) => {\r\n        localStorage.setItem(\"terms\", this.state.terms);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleLoginRegisterDialog = () => {\r\n    if (cookie.load(\"id\")) {\r\n      this.handleToggleProfileDialog();\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        showLoginRegister: !this.state.showLoginRegister,\r\n      });\r\n    }\r\n  };\r\n\r\n  setCountrySelect = (country) => {\r\n    var name = country;\r\n    if (!name) {\r\n      name = \"GLOBAL\";\r\n    }\r\n    console.log(country);\r\n    localStorage.setItem(\"cCountry\", name);\r\n    this.setState({\r\n      ...this.state,\r\n      showCountrySelect: !this.state.showCountrySelect,\r\n      cCountry: name,\r\n    });\r\n  };\r\n\r\n  handleCountrySelectDialog = (country) => {\r\n    localStorage.setItem(\"cCountry\", \"GLOBAL\");\r\n    this.setState({\r\n      ...this.state,\r\n      showCountrySelect: !this.state.showCountrySelect,\r\n      cCountry: \"GLOBAL\",\r\n    });\r\n  };\r\n\r\n  handleCSelectGenderDialog = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      showCGenderDialog: !this.state.showCGenderDialog,\r\n    });\r\n  };\r\n\r\n  handleOnSelectCGender = (val) => {\r\n    var name = val;\r\n    if (!name) {\r\n      name = \"EVERY\";\r\n    }\r\n    console.log(name);\r\n    localStorage.setItem(\"cGender\", name);\r\n    this.setState({\r\n      ...this.state,\r\n      showCGenderDialog: !this.state.showCGenderDialog,\r\n      cGender: name,\r\n    });\r\n  };\r\n\r\n  handleToggleProfileDialog = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      showProfileDialog: !this.state.showProfileDialog,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    LogHelper(`NODE ${JSON.stringify(this.state)}`);\r\n\r\n    return (\r\n      <div className=\"w-screen h-screen flex flex-col bg-black overflow-hidden  \">\r\n        <CamNotFoundDialogComponent\r\n          display={this.state.showCameraDialog}\r\n          onClose={() =>\r\n            this.setState({ ...this.state, showCameraDialog: false })\r\n          }\r\n          onAgree={() => this.initVideo()}\r\n        />\r\n        <SelectGenderComponent\r\n          display={this.state.showGenderDialog}\r\n          onClose={this.toggleGender}\r\n          onSelectGender={(val) => this.handleSelectGender(val)}\r\n        />\r\n        <LoginRegisterComponent\r\n          display={this.state.showLoginRegister}\r\n          onClose={this.handleLoginRegisterDialog}\r\n        />\r\n        <SelectCountryComponent\r\n          display={this.state.showCountrySelect}\r\n          onClose={this.handleCountrySelectDialog}\r\n          setCountrySelect={this.setCountrySelect}\r\n        />\r\n        <SelectCGenderComponent\r\n          display={this.state.showCGenderDialog}\r\n          onClose={this.handleCSelectGenderDialog}\r\n          selectCGender={this.handleOnSelectCGender}\r\n        />\r\n\r\n        <ProfileDialogComponent\r\n          display={this.state.showProfileDialog}\r\n          onClose={this.handleToggleProfileDialog}\r\n        />\r\n\r\n        <div className=\"flex w-full h-full relative flex-1 overflow-hidden\">\r\n          <video\r\n            autoPlay\r\n            id=\"remote-video\"\r\n            className=\"w-full h-full videoback object-cover\"\r\n            width=\"100\"\r\n            height=\"100\"\r\n          />\r\n\r\n          {!this.props.calling.isActive && (\r\n            <div className=\"opacity-80  flex flex-col items-center justify-center space-y-9 absolute top-0 left-0 h-full w-full px-3\">\r\n              <img src=\"/logo.png\" className=\"w-52 h-48 \" />\r\n              <h1 className=\"text-5xl lg:font-7xl font-bold text-red-500 font-Love \">\r\n                Flirt Me Baby\r\n              </h1>\r\n              <h2 className=\"text-red-500 font-extrabold text-lg font-serif\">\r\n                856,546 joined Flirt Me Baby\r\n              </h2>\r\n              <div className=\"flex flex-row w-full justify-center space-x-3 my-10 \">\r\n                <div\r\n                  className=\" font-mono p-3 cursor-pointer rounded-lg shadow-md bg-gray-100 text-black text-xl font-bold  flex items-center justify-center\"\r\n                  onClick={() => this.toggleGender()}\r\n                >\r\n                  I AM : {this.state.gender}\r\n                </div>\r\n                <div\r\n                  onClick={() => {\r\n                    this.socket.emit(\"online\");\r\n                    this.startConnecting();\r\n                  }}\r\n                  className=\" font-mono p-3 cursor-pointer rounded-lg shadow-md bg-gray-100 text-black text-xl font-bold  flex items-center justify-center\"\r\n                >\r\n                  {<FaPlay size={22} className=\"text-black mr-3\" />} Start\r\n                </div>\r\n              </div>\r\n              <TermsComponent\r\n                terms={this.state.terms}\r\n                onChangeTerms={(e) => this.handleChangeTerms(e)}\r\n                showTermsPopper={this.state.showTermsPopper}\r\n              />\r\n              <div className=\"flex items-center justify-center space-x-3 w-full \">\r\n                <ComponentGoogleButton>\r\n                  <img\r\n                    src={GoogleIcon}\r\n                    className=\"w-16 h-16 rounded-full bg-white p-2 cursor-pointer\"\r\n                  />\r\n                </ComponentGoogleButton>\r\n                <ComponentFacebookButton>\r\n                  <FaFacebook\r\n                    size={64}\r\n                    className=\"p-2 bg-blue-700 rounded-full text-white cursor-pointer\"\r\n                  />\r\n                </ComponentFacebookButton>\r\n                <div onClick={() => this.handleLoginRegisterDialog()}>\r\n                  <FaEnvelope\r\n                    size={64}\r\n                    className=\"p-2 bg-white rounded-full cursor-pointer\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* <div className=\"hidden absolute w-full lg:flex bg-dark-gray  items-center bg-gray-900 p-5 justify-around\">\r\n            <img src={AndroidIcon} className=\"w-48 h-20\" />\r\n            <img src={IosIcon} className=\"w-48 h-20\" />\r\n          </div> */}\r\n\r\n          <div className=\"absolute bg-transparent w-1/3 h-1/3 bottom-0 right-0\">\r\n            <video\r\n              autoPlay\r\n              id=\"local-video\"\r\n              className=\"w-full h-full min-h-full  bg-transparent object-cover \"\r\n              style={{\r\n                visibility:\r\n                  this.props.calling.connectStatus == CONNECTED\r\n                    ? \"visible\"\r\n                    : \"hidden\",\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          {this.props.calling.isActive && (\r\n            <div className=\"\">\r\n              <div className=\"flex flex-col  absolute top-0 left-0 right-0 justify-between items-center \">\r\n                <div className=\"flex space-x-2 p-2 lg:z-50 lg:relative\">\r\n                  <div\r\n                    className=\"p-2 cursor-pointer rounded-lg shadow-md bg-gray-100 text-black text-base lg:text-lg font-bold  flex items-center justify-center\"\r\n                    onClick={() => this.handleCSelectGenderDialog()}\r\n                  >\r\n                    FLIRT WITH\r\n                    {this.state.cGender === \"MALE\" && (\r\n                      <img src={MaleIcon} className=\"w-8 h-8 ml-2\" />\r\n                    )}\r\n                    {this.state.cGender === \"FEMALE\" && (\r\n                      <img src={FemaleIcon} className=\"w-8 h-8 ml-2\" />\r\n                    )}\r\n                    {this.state.cGender === \"OTHER\" && (\r\n                      <img src={GenOIcon} className=\"w-8 h-8 ml-2\" />\r\n                    )}\r\n                    <FaCaretDown size={25} className=\"ml-2\" />\r\n                  </div>\r\n                  <div\r\n                    className=\" font-mono p-2 cursor-pointer rounded-lg shadow-md bg-gray-100 text-black text-base lg:text-lg font-bold flex items-center justify-center\"\r\n                    onClick={() => this.handleCountrySelectDialog()}\r\n                  >\r\n                    LOCATION{\" \"}\r\n                    {this.state.cCountry == \"GLOBAL\" ? (\r\n                      <FaGlobe size={30} className=\"ml-2\" />\r\n                    ) : (\r\n                      <div className={`flag:${this.state.cCountry} ml-2`} />\r\n                    )}\r\n                    <FaCaretDown size={25} className=\"ml-2\" />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"flex  items-center justify-between w-full p-2 lg:absolute lg:top-0 lg:right-0 lg:left-0 z-0\">\r\n                  {localStorage.getItem(\"name\") && (\r\n                    <div\r\n                      className=\" flex sm:flex-col justify-between items-center cursor-pointer \"\r\n                      onClick={() => this.handleToggleProfileDialog()}\r\n                    >\r\n                      <img\r\n                        className=\"w-10 h-10 rounded-lg \"\r\n                        src={localStorage.getItem(\"picture\")}\r\n                      />\r\n                      <h1 className=\"text-base font-bold text-white hidden lg:block\">\r\n                        {localStorage.getItem(\"name\")}\r\n                      </h1>\r\n                    </div>\r\n                  )}\r\n                  {Object.keys(this.state.client).length > 0 && (\r\n                    <div\r\n                      className=\"flex flex-col justify-between items-center cursor-pointer \"\r\n                      onClick={() => this.handleToggleProfileDialog()}\r\n                    >\r\n                      {this.state.client.gender.toUpperCase() === \"MALE\" && (\r\n                        <img src={MaleIcon} className=\"w-14 h-14\" />\r\n                      )}\r\n                      {this.state.client.gender.toUpperCase() === \"FEMALE\" && (\r\n                        <img src={FemaleIcon} className=\"w-14 h-14 \" />\r\n                      )}\r\n                      {this.state.client.gender.toUpperCase() === \"OTHER\" && (\r\n                        <img src={GenOIcon} className=\"w-14 h-14 \" />\r\n                      )}\r\n                      <div className=\"flex items-center justify-between mt-2\">\r\n                        <img\r\n                          className={`w-8 h-8 rounded-full flag:${this.state.client.country}`}\r\n                        />\r\n                        <div className=\"text-base font-bold text-white ml-2\">\r\n                          {Object.entries(countries).map(([key, value]) => {\r\n                            if (key == this.state.client.country) {\r\n                              return value.name;\r\n                            }\r\n                          })}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"absolute flex flex-col w-full bottom-0 left-0 pb-10 \">\r\n                <div className=\"flex justify-center \">\r\n                  <div\r\n                    className=\"bg-red-500 m-2 rounded-full cursor-pointer\"\r\n                    onClick={async () => {\r\n                      await this.props.dispatch(GoOffline());\r\n                      this.DisconnectCall();\r\n                    }}\r\n                  >\r\n                    <FaRegStopCircle size={70} color=\"white\" className=\"p-2\" />\r\n                  </div>\r\n                  <div\r\n                    className=\"bg-blue-600 m-2 rounded-full cursor-pointer\"\r\n                    onClick={() => this.DisconnectCall()}\r\n                  >\r\n                    <FaArrowAltCircleRight\r\n                      size={70}\r\n                      color=\"white\"\r\n                      className=\"p-2\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {/* {this.props.calling.connectStatus == CONNECTED && (\r\n          <div className=\"bg-gray-400\">\r\n            <div className=\"flex flex-row items-center justify-between mx-2 mt-1\">\r\n              <BsGearFill size={30} className=\"cursor-pointer\" />\r\n              <div className=\"flex flex-row flex-grow m-2 p-1 items-center\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"border-b p-2 flex-grow mx-2 rounded-md focus:outline-none text-base font-bold \"\r\n                  placeholder=\"Write message here ...\"\r\n                />\r\n                <div className=\"cursor-pointer bg-blue-600 p-2 rounded-3xl text-white\">\r\n                  <FaArrowRight size={25} color=\"white\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )} */}\r\n        {this.state.showAlerDisconnect && (\r\n          <Alert\r\n            variant=\"primary\"\r\n            className=\"absolute bottom-0 left-0 right-0 m-auto\"\r\n          >\r\n            Opps User left room ...\r\n          </Alert>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    calling: state.calling,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(VideoCallPage);\r\n","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\pages\\VideoCallPage\\SelectGenderComponent.js",["138","139","140"],"import React from \"react\";\r\nimport { FaSkullCrossbones } from \"react-icons/fa\";\r\nimport MaleIcon from \"../../assets/images/malel.png\";\r\nimport FemaleIcon from \"../../assets/images/femalel.png\";\r\nimport GenOIcon from \"../../assets/images/genderO.png\";\r\nimport { Card, Modal } from \"react-bootstrap\";\r\n\r\nconst list = [\r\n  {\r\n    icon: MaleIcon,\r\n    text: \"MALE\",\r\n  },\r\n  {\r\n    icon: FemaleIcon,\r\n    text: \"FEMALE\",\r\n  },\r\n  {\r\n    icon: GenOIcon,\r\n    text: \"OTHER\",\r\n  },\r\n];\r\n\r\nfunction SelectGenderComponent(props) {\r\n  const { display, onClose, onSelectGender } = props;\r\n\r\n  return (\r\n    <Modal show={display} onHide={onClose} size=\"sm\">\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Select your gender type</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {list.map(({ icon, text }) => (\r\n          <Card\r\n            key={text}\r\n            className=\"\"\r\n            onClick={() => onSelectGender(text)}\r\n            className=\"m-3 \"\r\n          >\r\n            <div className=\"p-2 flex items-center justify-start cursor-pointer hover:bg-gray-300\">\r\n              <img src={icon} className=\"w-16 h-14 object-cover\" />\r\n              <h1 className=\"text-2xl font-bold text-indigo-500 ml-3 font-Love\">\r\n                {text}\r\n              </h1>\r\n            </div>\r\n          </Card>\r\n        ))}\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default SelectGenderComponent;\r\n","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\pages\\VideoCallPage\\TermsComponent.js",["141"],"import React, { useRef } from \"react\";\r\nimport { Card, Form, Overlay, Popover } from \"react-bootstrap\";\r\nimport LogHelper from \"../../utils/LogHelper\";\r\n\r\nfunction TermsComponent(props) {\r\n  const { terms, onChangeTerms, showTermsPopper } = props;\r\n  const refTerms = useRef();\r\n\r\n  return (\r\n    <Card elevation={3} className=\"flex flex-row items-center p-2\">\r\n      <Form.Check\r\n        id=\"switchEnabled\"\r\n        type=\"switch\"\r\n        checked={terms}\r\n        onChange={(e) => onChangeTerms(e)}\r\n        color=\"primary\"\r\n        name=\"checkedA\"\r\n        ref={refTerms}\r\n      />\r\n      <Overlay target={refTerms} show={showTermsPopper} placement=\"top\">\r\n        <Popover id=\"terms\">\r\n          <Popover.Content>\r\n            <strong>You must agree to continue</strong>\r\n          </Popover.Content>\r\n        </Popover>\r\n      </Overlay>\r\n      <p className=\"text-lg font-bold font-serif\">\r\n        I certify I have read and agree to the <u>Terms of Use</u> and\r\n        Guidelines.\r\n      </p>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default TermsComponent;\r\n","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\Components\\ComponentFacebookButton.js",["142","143"],"import React from \"react\";\r\nimport FacebookLogin from \"react-facebook-login\";\r\nimport { FaFacebook } from \"react-icons/fa\";\r\nimport AxiosInstance from \"../utils/AxiosInstance\";\r\nimport cookie from \"react-cookies\";\r\n\r\nfunction ComponentFacebookButton(props) {\r\n  const responseFacebook = async (res) => {\r\n    console.log(res);\r\n    if (res.name) {\r\n      const user = {\r\n        name: res.name,\r\n        email: res.email,\r\n        signupType: \"facebook\",\r\n        password: res.accessToken,\r\n        userId: res.userID,\r\n        accessToken: res.signedRequest,\r\n        picture: res.picture.data.url,\r\n      };\r\n\r\n      const result = await AxiosInstance.post(\"/auth/register\", user, null);\r\n      console.log(`result ${JSON.stringify(result)}`);\r\n\r\n      if (result.status == 200 && result.data) {\r\n        cookie.save(\"id\", result.data.token, { path: \"/\" });\r\n        localStorage.setItem(\"name\", user.name);\r\n        localStorage.setItem(\"email\", user.email);\r\n        localStorage.setItem(\"picture\", user.picture);\r\n        localStorage.setItem(\"signUpType\", user.signupType);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FacebookLogin\r\n      appId=\"248937180191492\"\r\n      autoLoad={false}\r\n      fields=\"name,email,picture,gender\"\r\n      callback={responseFacebook}\r\n      // scope=\"public_profile,user_gender,user_location,user_age_range\"\r\n      cssClass=\"w-full\"\r\n      // render={(renderProps) => <div onClick={renderProps.onClick}>hello</div>}\r\n      textButton=\"\"\r\n      icon={props.children}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ComponentFacebookButton;\r\n","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\Components\\ComponentGoogleButton.js",["144"],"import React from \"react\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport AxiosInstance from \"../utils/AxiosInstance\";\r\nimport cookie from \"react-cookies\";\r\n\r\nfunction ComponentGoogleButton(props) {\r\n  const responseGoogle = async (res) => {\r\n    console.log(res.getBasicProfile());\r\n    const profile = res.getBasicProfile();\r\n    const user = {\r\n      name: profile.getName(),\r\n      email: profile.getEmail(),\r\n      password: res.getAuthResponse().id_token,\r\n      userId: profile.getId(),\r\n      picture: profile.getImageUrl(),\r\n      signupType: \"google\",\r\n    };\r\n\r\n    const result = await AxiosInstance.post(\"/auth/register\", user, null);\r\n    console.log(`result ${JSON.stringify(result)}`);\r\n\r\n    if (result.status == 200 && result.data) {\r\n      cookie.save(\"id\", result.data.token, { path: \"/\" });\r\n      localStorage.setItem(\"name\", user.name);\r\n      localStorage.setItem(\"email\", user.email);\r\n      localStorage.setItem(\"picture\", user.picture);\r\n      localStorage.setItem(\"signUpType\", user.signupType);\r\n    }\r\n  };\r\n  const responseGoogleFailed = (res) => {\r\n    console.log(res);\r\n  };\r\n\r\n  return (\r\n    <GoogleLogin\r\n      clientId={process.env.REACT_APP_GOOGLE_ID}\r\n      render={(renderProps) => {\r\n        return <div onClick={renderProps.onClick}>{props.children}</div>;\r\n      }}\r\n      onSuccess={responseGoogle}\r\n      onFailure={responseGoogleFailed}\r\n      cookiePolicy={\"single_host_origin\"}\r\n      isSignedIn={true}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ComponentGoogleButton;\r\n","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\Components\\ComponentEmailButton.js",["145","146"],"import React, { useState } from \"react\";\r\nimport { FaEnvelope } from \"react-icons/fa\";\r\nimport TermsComponent from \"../pages/VideoCallPage/TermsComponent\";\r\nimport AxiosInstance from \"../utils/AxiosInstance\";\r\nimport cookie from \"react-cookies\";\r\n\r\nconst emailFormat = /^[^s@]+@[^s@]+.[^s@]+$/;\r\n\r\nfunction ComponentEmailButton(props) {\r\n  const { onClose } = props;\r\n  const [Term, setTerm] = useState(false);\r\n  const [isLogin, setIsLogin] = useState(false);\r\n\r\n  const [txtName, setTxtName] = useState(\"\");\r\n  const [txtEmail, setTxtEmail] = useState(\"\");\r\n  const [txtPassword, setTxtPassword] = useState(\"\");\r\n\r\n  const [txtNameError, setTxtNameError] = useState(\"\");\r\n  const [txtEmailError, setTxtEmailError] = useState(\"\");\r\n  const [txtPasswordError, setTxtPasswordError] = useState(\"\");\r\n  const [termsError, setTermsError] = useState(false);\r\n\r\n  const doLogin = () => {};\r\n  const doSignUp = async () => {\r\n    if (!txtName || txtName.trim().length < 6) {\r\n      setTxtNameError(\"Enter minimum 6 char long name !\");\r\n      return;\r\n    }\r\n    if (!txtEmail || !emailFormat.test(txtEmail.trim())) {\r\n      setTxtEmailError(\"Enter valid email address !\");\r\n      return;\r\n    }\r\n    if (!txtPassword || txtPassword.trim().length < 6) {\r\n      setTxtPasswordError(\"Enter minimum 6 char long password !\");\r\n      return;\r\n    }\r\n    if (!Term) {\r\n      setTermsError(true);\r\n      return;\r\n    }\r\n\r\n    setTermsError(false);\r\n    setTxtNameError(\"\");\r\n    setTxtEmailError(\"\");\r\n    setTxtPasswordError(\"\");\r\n\r\n    const user = {\r\n      name: txtName,\r\n      email: txtEmail,\r\n      password: txtPassword,\r\n      country: localStorage.getItem(\"country\"),\r\n      signupType: \"email\",\r\n    };\r\n\r\n    const result = await AxiosInstance.post(\"/auth/register\", user, null);\r\n    console.log(`result ${JSON.stringify(result)}`);\r\n    if (result.status == 200 && result.data) {\r\n      cookie.save(\"id\", result.data.token, { path: \"/\" });\r\n      localStorage.setItem(\"name\", txtName);\r\n      localStorage.setItem(\"email\", txtEmail);\r\n      localStorage.setItem(\"picture\", \"\");\r\n      localStorage.setItem(\"signUpType\", user.signupType);\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center\">\r\n      {/* <div\r\n        className=\"group p-2 m-2 mx-3 cursor-pointer flex flex-row w-72 items-center justify-around  hover:bg-yellow-500 bg-yellow-400 rounded-md focus:ring-2 focus:ring-blue-600 hover:shadow-lg \"\r\n        onClick={() => {\r\n          // setLogWithEmail(true);\r\n        }}\r\n      >\r\n        <FaEnvelope className=\"w-8 h-8 text-gray-800\" />\r\n        <div className=\"text-lg text-white font-semibold uppercase  group-hover:text-xl\">\r\n          Login with Email\r\n        </div>\r\n      </div> */}\r\n      {/* {LogWithEmail && ( */}\r\n      <div className=\"flex flex-col items-center mt-3\">\r\n        {!isLogin && (\r\n          <input\r\n            type=\"text\"\r\n            className=\"border w-full rounded-full p-2 my-2 font-semibold  focus:outline-none bg-gray-300 text-black text-lg focus:bg-white focus:text-gray-700 \"\r\n            placeholder=\"Enter Your Name ..\"\r\n            value={txtName}\r\n            onChange={(e) => setTxtName(e.target.value)}\r\n          />\r\n        )}\r\n        <span className=\"text-red-500 text-lg font-bold my-2\">\r\n          {txtNameError}\r\n        </span>\r\n        <input\r\n          type=\"text\"\r\n          className=\"border w-full rounded-full p-2 m-2 font-semibold  focus:outline-none bg-gray-300 text-black text-lg focus:bg-white focus:text-gray-700 \"\r\n          placeholder=\"email@address.com\"\r\n          value={txtEmail}\r\n          onChange={(e) => setTxtEmail(e.target.value)}\r\n        />\r\n        <span className=\"text-red-500 text-lg font-bold my-2\">\r\n          {txtEmailError}\r\n        </span>\r\n        <input\r\n          type=\"password\"\r\n          className=\"border w-full rounded-full p-2 m-2 font-semibold focus:outline-none bg-gray-300 text-black text-lg focus:bg-white focus:text-gray-700 \"\r\n          placeholder=\"Password\"\r\n          value={txtPassword}\r\n          onChange={(e) => setTxtPassword(e.target.value)}\r\n        />\r\n        <span className=\"text-red-500 text-lg font-bold my-2\">\r\n          {txtPasswordError}\r\n        </span>\r\n        <TermsComponent\r\n          terms={Term}\r\n          onChangeTerms={(e) => {\r\n            console.log(e.target.checked);\r\n            setTerm(e.target.checked);\r\n          }}\r\n          showTermsPopper={termsError}\r\n        />\r\n        {termsError && (\r\n          <span className=\"text-red-500 text-lg font-bold my-2\">\r\n            Please agree with terms and condition\r\n          </span>\r\n        )}\r\n        <div\r\n          className=\"m-3 p-2 px-5 rounded-lg bg-blue-700 text-lg font-bold text-white uppercase\r\n        hover:bg-blue-600 shadow-xl cursor-pointer\"\r\n          onClick={() => {\r\n            isLogin ? doLogin() : doSignUp();\r\n          }}\r\n        >\r\n          join for free\r\n        </div>\r\n        {isLogin ? (\r\n          <div className=\"m-2\">\r\n            New user ?{\" \"}\r\n            <span\r\n              className=\"hover:text-blue-600 font-semibold cursor-pointer\"\r\n              onClick={() => setIsLogin(false)}\r\n            >\r\n              Register here\r\n            </span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"m-2\">\r\n            Already a Member?{\" \"}\r\n            <span\r\n              className=\"hover:text-blue-600 font-semibold cursor-pointer\"\r\n              onClick={() => setIsLogin(true)}\r\n            >\r\n              Log in Here\r\n            </span>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {/* )} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ComponentEmailButton;\r\n","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\pages\\VideoCallPage\\SelectCountryComponent.js",["147","148"],"import React from \"react\";\r\nimport { countries, getEmojiFlag, getUnicode } from \"countries-list\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nfunction SelectCountryComponent(props) {\r\n  const { display, onClose, setCountrySelect } = props;\r\n\r\n  console.log(`cu ${JSON.stringify(countries.AE.emojiU)}`);\r\n  return (\r\n    <Modal show={display} onHide={onClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Select Matching Country</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"grid grid-cols-2 gap-0 lg:grid-cols-3 \">\r\n          {Object.entries(countries).map((k, v) => (\r\n            <div\r\n              key={v}\r\n              className=\"flex  justify-start items-center space-x-3 p-1 cursor-pointer hover:bg-gray-400 hover:text-white\"\r\n              onClick={() => setCountrySelect(k[0])}\r\n            >\r\n              <div className={`flag:${k[0]} w-10 h-6`}></div>\r\n              <div className=\"text-lg font-bold line-clamp-1 font-mono\">\r\n                {k[1].name}\r\n              </div>\r\n              {/* <Divide /> */}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default SelectCountryComponent;\r\n","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\pages\\VideoCallPage\\SelectCGenderComponent.js",["149","150","151","152","153"],"import React from \"react\";\r\nimport MaleIcon from \"../../assets/images/malel.png\";\r\nimport FemaleIcon from \"../../assets/images/femalel.png\";\r\nimport GenOIcon from \"../../assets/images/genderO.png\";\r\nimport IconCoin from \"../../assets/images/coin.png\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nfunction SelectCGenderComponent(props) {\r\n  const { onClose, display, selectCGender } = props;\r\n\r\n  return (\r\n    <Modal show={display} onHide={onClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title> Connect me to :</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"p-2 lg:p-5 overflow-hidden flex flex-col \">\r\n          <div\r\n            className=\"group flex items-center justify-between bg-gray-400 rounded-2xl shadow-lg px-3 py-2 my-2 lg:py-1 m-2 hover:bg-green-100 cursor-pointer\"\r\n            onClick={() => selectCGender(\"EVERYONE\")}\r\n          >\r\n            <img src={GenOIcon} className=\"w-12 h-12\" />\r\n            <div className=\"text-white group-hover:text-black font-bold text-2xl px-2\">\r\n              Everyone\r\n            </div>\r\n            <div className=\"text-xl text-red-500 font-semibold\">Free</div>\r\n          </div>\r\n          <div\r\n            className=\"group flex items-center justify-between bg-gray-400 rounded-2xl shadow-lg px-3 py-2 my-2 lg:py-1 m-2 hover:bg-green-100 cursor-pointer\"\r\n            onClick={() => selectCGender(\"MALE\")}\r\n          >\r\n            <img src={MaleIcon} className=\"w-12 h-12\" />\r\n            <div className=\"text-white group-hover:text-black font-bold text-2xl px-2\">\r\n              Male\r\n            </div>\r\n            <img src={IconCoin} className=\"w-8 h-8\" />\r\n          </div>\r\n          <div\r\n            className=\"group flex items-center justify-between bg-gray-400 rounded-2xl shadow-lg px-3 py-2 my-2 lg:py-1 m-2 hover:bg-green-100 cursor-pointer\"\r\n            onClick={() => selectCGender(\"FEMALE\")}\r\n          >\r\n            <img src={FemaleIcon} className=\"w-12 h-12\" />\r\n            <div className=\"text-white group-hover:text-black font-bold text-2xl px-2\">\r\n              Female\r\n            </div>\r\n            <img src={IconCoin} className=\"w-8 h-8\" />\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default SelectCGenderComponent;\r\n","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\pages\\VideoCallPage\\ProfileDialogComponent.js",["154","155","156","157","158","159","160"],"import { countries } from \"countries-list\";\r\nimport React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport cookie from \"react-cookies\";\r\nimport { GoogleLogout } from \"react-google-login\";\r\n\r\nfunction ProfileDialogComponent(props) {\r\n  const { onClose, display } = props;\r\n\r\n  const token = cookie.load(\"id\");\r\n\r\n  const imgSrc = localStorage.getItem(\"picture\");\r\n  const name = localStorage.getItem(\"name\");\r\n  const email = localStorage.getItem(\"email\");\r\n  const country = localStorage.getItem(\"country\");\r\n  const loginType = localStorage.getItem(\"signUpType\");\r\n\r\n  const doLogout = (res) => {\r\n    console.log(res);\r\n    window.FB.logout();\r\n    cookie.remove(\"id\", { path: \"/\" });\r\n    localStorage.removeItem(\"picture\");\r\n    localStorage.removeItem(\"id\");\r\n    localStorage.removeItem(\"name\");\r\n    localStorage.removeItem(\"terms\");\r\n    localStorage.removeItem(\"email\");\r\n    localStorage.removeItem(\"gender\");\r\n    localStorage.removeItem(\"signUpType\");\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal show={display} onHide={onClose} size=\"sm\">\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Profile</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"flex flex-col items-center overflow-x-hidden bg-gray-200\">\r\n          <img\r\n            src={imgSrc ? imgSrc : \"/apple-touch-icon.png\"}\r\n            className=\"w-20 h-20 m-10 rounded-full\"\r\n          />\r\n          <div className=\"text-lg font-bold caps m-3\">{name}</div>\r\n          <div className=\"flex items-center justify-between my-2\">\r\n            <img className={`w-10 h-10 rounded-full flag:${country}`} />\r\n            <div className=\"text-base font-bold text-black ml-2\">\r\n              {Object.entries(countries).map(([key, value]) => {\r\n                if (key == country) {\r\n                  return value.name;\r\n                }\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        {loginType == \"google\" ? (\r\n          <GoogleLogout\r\n            clientId={process.env.REACT_APP_GOOGLE_ID}\r\n            buttonText=\"Logout\"\r\n            onLogoutSuccess={doLogout}\r\n            render={(renderProps) => {\r\n              return (\r\n                <div\r\n                  className=\"bg-red-600 text-white font-bold px-3 py-2  m-3 cursor-pointer rounded-2xl shadow-lg\"\r\n                  onClick={() => renderProps.onClick()}\r\n                >\r\n                  Logout Google\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n        ) : (\r\n          <div\r\n            className=\"bg-red-600 text-white font-bold px-3 py-2  m-3 cursor-pointer rounded-2xl shadow-lg\"\r\n            onClick={() => doLogout()}\r\n          >\r\n            Logout\r\n          </div>\r\n        )}\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ProfileDialogComponent;\r\n","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\Components\\ComponentCheckoutForm.js",["161","162","163","164"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {\r\n  CardElement,\r\n  Elements,\r\n  useStripe,\r\n  useElements,\r\n} from \"@stripe/react-stripe-js\";\r\n\r\nconst ComponentCheckoutForm = () => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: elements.getElement(CardElement),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <CardElement />\r\n      <button type=\"submit\" disabled={!stripe}>\r\n        Pay\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ComponentCheckoutForm;\r\n","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\serviceWorkerRegistration.js",[],"D:\\React\\JS\\Flirt_Me_Video_Call\\src\\utils\\LogHelper.js",["165"],"const LogHelper = (key = \"\", msg) => {\r\n  if (process.env.NODE_ENV == \"development\") {\r\n    console.log(key, JSON.stringify(msg));\r\n  }\r\n};\r\n\r\nexport default LogHelper;\r\n","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\pages\\VideoCallPage\\CamNotFoundDialogComponent.js",[],{"ruleId":"166","severity":1,"message":"167","line":1,"column":8,"nodeType":"168","messageId":"169","endLine":1,"endColumn":9},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":46,"column":15,"nodeType":"176","endLine":49,"endColumn":17},{"ruleId":"170","replacedBy":"177"},{"ruleId":"172","replacedBy":"178"},{"ruleId":"166","severity":1,"message":"179","line":8,"column":10,"nodeType":"168","messageId":"169","endLine":8,"endColumn":20},{"ruleId":"166","severity":1,"message":"180","line":10,"column":3,"nodeType":"168","messageId":"169","endLine":10,"endColumn":15},{"ruleId":"166","severity":1,"message":"181","line":22,"column":3,"nodeType":"168","messageId":"169","endLine":22,"endColumn":15},{"ruleId":"166","severity":1,"message":"182","line":35,"column":10,"nodeType":"168","messageId":"169","endLine":35,"endColumn":18},{"ruleId":"166","severity":1,"message":"183","line":36,"column":8,"nodeType":"168","messageId":"169","endLine":36,"endColumn":29},{"ruleId":"166","severity":1,"message":"184","line":47,"column":7,"nodeType":"168","messageId":"169","endLine":47,"endColumn":20},{"ruleId":"185","severity":1,"message":"186","line":56,"column":44,"nodeType":"187","messageId":"188","endLine":56,"endColumn":46},{"ruleId":"185","severity":1,"message":"186","line":124,"column":39,"nodeType":"187","messageId":"188","endLine":124,"endColumn":41},{"ruleId":"174","severity":1,"message":"175","line":563,"column":15,"nodeType":"176","endLine":563,"endColumn":61},{"ruleId":"174","severity":1,"message":"175","line":594,"column":19,"nodeType":"176","endLine":597,"endColumn":21},{"ruleId":"185","severity":1,"message":"186","line":627,"column":52,"nodeType":"187","messageId":"188","endLine":627,"endColumn":54},{"ruleId":"174","severity":1,"message":"175","line":644,"column":23,"nodeType":"176","endLine":644,"endColumn":70},{"ruleId":"174","severity":1,"message":"175","line":647,"column":23,"nodeType":"176","endLine":647,"endColumn":72},{"ruleId":"174","severity":1,"message":"175","line":650,"column":23,"nodeType":"176","endLine":650,"endColumn":70},{"ruleId":"185","severity":1,"message":"186","line":659,"column":42,"nodeType":"187","messageId":"188","endLine":659,"endColumn":44},{"ruleId":"174","severity":1,"message":"175","line":674,"column":23,"nodeType":"176","endLine":677,"endColumn":25},{"ruleId":"174","severity":1,"message":"175","line":689,"column":25,"nodeType":"176","endLine":689,"endColumn":69},{"ruleId":"174","severity":1,"message":"175","line":692,"column":25,"nodeType":"176","endLine":692,"endColumn":72},{"ruleId":"174","severity":1,"message":"175","line":695,"column":25,"nodeType":"176","endLine":695,"endColumn":70},{"ruleId":"174","severity":1,"message":"175","line":698,"column":25,"nodeType":"176","endLine":700,"endColumn":27},{"ruleId":"189","severity":1,"message":"190","line":702,"column":73,"nodeType":"191","messageId":"192","endLine":702,"endColumn":75},{"ruleId":"185","severity":1,"message":"186","line":703,"column":37,"nodeType":"187","messageId":"188","endLine":703,"endColumn":39},{"ruleId":"166","severity":1,"message":"193","line":2,"column":10,"nodeType":"168","messageId":"169","endLine":2,"endColumn":27},{"ruleId":"194","severity":1,"message":"195","line":37,"column":13,"nodeType":"196","endLine":37,"endColumn":29},{"ruleId":"174","severity":1,"message":"175","line":40,"column":15,"nodeType":"176","endLine":40,"endColumn":68},{"ruleId":"166","severity":1,"message":"197","line":3,"column":8,"nodeType":"168","messageId":"169","endLine":3,"endColumn":17},{"ruleId":"166","severity":1,"message":"198","line":3,"column":10,"nodeType":"168","messageId":"169","endLine":3,"endColumn":20},{"ruleId":"185","severity":1,"message":"186","line":24,"column":25,"nodeType":"187","messageId":"188","endLine":24,"endColumn":27},{"ruleId":"185","severity":1,"message":"186","line":22,"column":23,"nodeType":"187","messageId":"188","endLine":22,"endColumn":25},{"ruleId":"166","severity":1,"message":"199","line":2,"column":10,"nodeType":"168","messageId":"169","endLine":2,"endColumn":20},{"ruleId":"185","severity":1,"message":"186","line":57,"column":23,"nodeType":"187","messageId":"188","endLine":57,"endColumn":25},{"ruleId":"166","severity":1,"message":"200","line":2,"column":21,"nodeType":"168","messageId":"169","endLine":2,"endColumn":33},{"ruleId":"166","severity":1,"message":"201","line":2,"column":35,"nodeType":"168","messageId":"169","endLine":2,"endColumn":45},{"ruleId":"174","severity":1,"message":"175","line":22,"column":13,"nodeType":"176","endLine":22,"endColumn":57},{"ruleId":"174","severity":1,"message":"175","line":32,"column":13,"nodeType":"176","endLine":32,"endColumn":57},{"ruleId":"174","severity":1,"message":"175","line":36,"column":13,"nodeType":"176","endLine":36,"endColumn":55},{"ruleId":"174","severity":1,"message":"175","line":42,"column":13,"nodeType":"176","endLine":42,"endColumn":59},{"ruleId":"174","severity":1,"message":"175","line":46,"column":13,"nodeType":"176","endLine":46,"endColumn":55},{"ruleId":"166","severity":1,"message":"202","line":10,"column":9,"nodeType":"168","messageId":"169","endLine":10,"endColumn":14},{"ruleId":"166","severity":1,"message":"203","line":14,"column":9,"nodeType":"168","messageId":"169","endLine":14,"endColumn":14},{"ruleId":"174","severity":1,"message":"175","line":39,"column":11,"nodeType":"176","endLine":42,"endColumn":13},{"ruleId":"174","severity":1,"message":"175","line":45,"column":13,"nodeType":"176","endLine":45,"endColumn":73},{"ruleId":"189","severity":1,"message":"190","line":47,"column":61,"nodeType":"191","messageId":"192","endLine":47,"endColumn":63},{"ruleId":"185","severity":1,"message":"186","line":48,"column":25,"nodeType":"187","messageId":"188","endLine":48,"endColumn":27},{"ruleId":"185","severity":1,"message":"186","line":57,"column":20,"nodeType":"187","messageId":"188","endLine":57,"endColumn":22},{"ruleId":"166","severity":1,"message":"204","line":2,"column":8,"nodeType":"168","messageId":"169","endLine":2,"endColumn":16},{"ruleId":"166","severity":1,"message":"182","line":5,"column":3,"nodeType":"168","messageId":"169","endLine":5,"endColumn":11},{"ruleId":"166","severity":1,"message":"205","line":16,"column":13,"nodeType":"168","messageId":"169","endLine":16,"endColumn":18},{"ruleId":"166","severity":1,"message":"206","line":16,"column":20,"nodeType":"168","messageId":"169","endLine":16,"endColumn":33},{"ruleId":"185","severity":1,"message":"186","line":2,"column":28,"nodeType":"187","messageId":"188","endLine":2,"endColumn":30},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","no-native-reassign",["207"],"no-negated-in-lhs",["208"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["207"],["208"],"'BsGearFill' is defined but never used.","'FaArrowRight' is defined but never used.","'NotConnected' is defined but never used.","'Elements' is defined but never used.","'ComponentCheckoutForm' is defined but never used.","'stripePromise' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'FaSkullCrossbones' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'LogHelper' is defined but never used.","'FaFacebook' is defined but never used.","'FaEnvelope' is defined but never used.","'getEmojiFlag' is defined but never used.","'getUnicode' is defined but never used.","'token' is assigned a value but never used.","'email' is assigned a value but never used.","'ReactDOM' is defined but never used.","'error' is assigned a value but never used.","'paymentMethod' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]