[{"D:\\React\\JS\\Flirt_Me_Video_Call\\src\\index.js":"1","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\App.js":"2","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\pages\\VideoPage.js":"3","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\pages\\MainPage.js":"4","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\pages\\ContactPage.js":"5","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\Components\\SelectGenderComponent.js":"6","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\Components\\LoginRegisterComponent.js":"7","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\Components\\ComponentAuthButton.js":"8","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\utils\\AxiosInstance.js":"9"},{"size":261,"mtime":1613504926077,"results":"10","hashOfConfig":"11"},{"size":486,"mtime":1613641360281,"results":"12","hashOfConfig":"11"},{"size":12614,"mtime":1613653821306,"results":"13","hashOfConfig":"11"},{"size":675,"mtime":1613641342350,"results":"14","hashOfConfig":"11"},{"size":274,"mtime":1613645105822,"results":"15","hashOfConfig":"11"},{"size":1447,"mtime":1613504925400,"results":"16","hashOfConfig":"11"},{"size":5420,"mtime":1613647692983,"results":"17","hashOfConfig":"11"},{"size":652,"mtime":1613504925293,"results":"18","hashOfConfig":"11"},{"size":152,"mtime":1613504926210,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1yfzlo3",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\React\\JS\\Flirt_Me_Video_Call\\src\\index.js",[],["43","44"],"D:\\React\\JS\\Flirt_Me_Video_Call\\src\\App.js",["45"],"import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport MainPage from \"./pages/MainPage\";\r\nimport ContactPage from \"./pages/ContactPage\";\r\nimport VideoPage from \"./pages/VideoPage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route component={VideoPage} path=\"/\" exact />\r\n          <Route component={ContactPage} path=\"/contact\" />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\pages\\VideoPage.js",["46","47","48","49","50","51","52","53","54","55","56","57","58"],"import React, { useState, useEffect, useRef, StyleSheet } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"peerjs\";\r\nimport Video1 from \"../assets/videos/no_con_1.mp4\";\r\nimport Giphy from \"../assets/videos/giphy.gif\";\r\nimport Rodal from \"rodal\";\r\nimport SelectGenderComponent from \"../Components/SelectGenderComponent\";\r\nimport { FaPlay } from \"react-icons/fa\";\r\nimport { Switch } from \"@material-ui/core\";\r\nimport { BsGearFill } from \"react-icons/bs\";\r\nimport {\r\n  FaArrowRight,\r\n  FaRegStopCircle,\r\n  FaArrowAltCircleRight,\r\n} from \"react-icons/fa\";\r\nimport AndroidIcon from \"../assets/images/androidIcon.png\";\r\nimport IosIcon from \"../assets/images/ios.svg\";\r\nimport LoginRegisterComponent from \"../Components/LoginRegisterComponent\";\r\nimport {} from \"./styles.css\";\r\n\r\nfunction VideoPage() {\r\n  const status = {\r\n    NOTCONNECTED: \"Not Connected\",\r\n    CONNECTING: \"Searching for Partner\",\r\n    CONNECTED: \"Connection Established\",\r\n    DISCONNECTED: \"Disconnected\",\r\n  };\r\n\r\n  const initialState = {\r\n    local: \"\",\r\n    remote: \"\",\r\n    myId: \"\",\r\n    socketId: \"\",\r\n    peerId: \"\",\r\n    users: {},\r\n    clientPeerId: \"\",\r\n    initScreen: true,\r\n    connectStatus: status.NOTCONNECTED,\r\n  };\r\n\r\n  const initialProfile = {\r\n    gender: \"MALE\",\r\n    terms: false,\r\n  };\r\n\r\n  const customStyles = {\r\n    width: \"auto\",\r\n    height: \"auto\",\r\n    margin: 0,\r\n    top: \"10%\",\r\n    bottom: \"10%\",\r\n    left: \"25%\",\r\n    right: \"25%\",\r\n    overflow: \"scroll\",\r\n    overflowX: \"hidden\",\r\n  };\r\n\r\n  const [state, setstate] = useState(initialState);\r\n  const [selectGender, setselectGender] = useState(false);\r\n  const [toggleAuthModel, settoggleAuthModel] = useState(false);\r\n  const [profile, setprofile] = useState(initialProfile);\r\n  const socket = useRef();\r\n  const peer = useRef();\r\n  const localVideo = useRef();\r\n  const remoteVideo = useRef();\r\n\r\n  const initVideo = async () => {\r\n    // navigator.getUserMedia =\r\n    //   navigator.getUserMedia ||\r\n    //   navigator.webkitGetUserMedia ||\r\n    //   navigator.mozGetUserMedia ||\r\n    //   navigator.msGetUserMedia ||\r\n    //   navigator.oGetUserMedia;\r\n\r\n    remoteVideo.current.srcObject = await getStream();\r\n  };\r\n\r\n  const initLocalVideo = () => {\r\n    if (remoteVideo.current.hasAttribute(\"src\")) {\r\n      remoteVideo.current.removeAttribute(\"src\");\r\n    }\r\n    var source = document.createElement(\"source\");\r\n    source.setAttribute(\"src\", Video1);\r\n    remoteVideo.current.appendChild(source);\r\n    remoteVideo.current.muted = true;\r\n    remoteVideo.current.onended = function () {\r\n      this.load();\r\n      this.play();\r\n    };\r\n  };\r\n\r\n  const getStream = () => {\r\n    try {\r\n      const stream = navigator.mediaDevices\r\n        .getUserMedia({ video: true, audio: true })\r\n        .then((stream) => {\r\n          return stream;\r\n        })\r\n        .catch((err) => {\r\n          console.log(`erro ${err}`);\r\n        });\r\n      return stream;\r\n    } catch (error) {\r\n      handleError(error);\r\n    }\r\n  };\r\n\r\n  const constraints = (window.constraints = {\r\n    audio: false,\r\n    video: true,\r\n  });\r\n\r\n  function handleError(error) {\r\n    if (error.name === \"ConstraintNotSatisfiedError\") {\r\n      const v = constraints.video;\r\n      errorMsg(\r\n        `The resolution ${v.width.exact}x${v.height.exact} px is not supported by your device.`\r\n      );\r\n    } else if (error.name === \"PermissionDeniedError\") {\r\n      errorMsg(\r\n        \"Permissions have not been granted to use your camera and \" +\r\n          \"microphone, you need to allow the page access to your devices in \" +\r\n          \"order for the demo to work.\"\r\n      );\r\n    }\r\n    errorMsg(`getUserMedia error: ${error.name}`, error);\r\n  }\r\n\r\n  function errorMsg(msg, error) {\r\n    const errorElement = document.querySelector(\"#errorMsg\");\r\n    errorElement.innerHTML += `<p>${msg}</p>`;\r\n    if (typeof error !== \"undefined\") {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // navigator.geolocation.getCurrentPosition((position) => {\r\n    //   console.log(\r\n    //     `lat=${position.coords.latitude}&lon=${position.coords.longitude}`\r\n    //   );\r\n    // });\r\n\r\n    remoteVideo.current = document.getElementById(\"remote-video\");\r\n    localVideo.current = document.getElementById(\"local-video\");\r\n\r\n    // initLocalVideo();\r\n    initVideo();\r\n    socket.current = io(\"http://192.168.0.220:4000\");\r\n    socket.current.on(\"connect\", () => {\r\n      console.log(`socket connect id ${socket.current.id} `);\r\n      console.log(`peer connect id ${peer.current.id} `);\r\n      setstate({ ...state, socketId: socket.id });\r\n    });\r\n\r\n    socket.current.on(\"yourID\", (id) => {\r\n      setstate({ ...state, myId: id });\r\n    });\r\n\r\n    socket.current.on(\"allUsers\", (users) => {\r\n      console.log(users);\r\n      setstate({ ...state, users: users });\r\n    });\r\n\r\n    socket.current.on(\"requestCall\", (arg, callback) => {\r\n      console.log(`id ${arg.peerId}`);\r\n      const conn = peer.current.connect(arg.peerId);\r\n      // setstate({ ...state, clientPeerId: peerId });\r\n      conn.on(\"open\", async function () {\r\n        console.log(`con open ${conn.peer} `);\r\n        setstate({ ...state, connectStatus: status.CONNECTED });\r\n\r\n        socket.current.emit(\"userConnected\", { connectedTo: conn.peer });\r\n\r\n        // Receive messages\r\n        conn.on(\"data\", function (data) {\r\n          console.log(\"Received\", data);\r\n        });\r\n\r\n        const call = peer.current.call(arg.peerId, await getStream());\r\n        call.on(\"stream\", async (remoteStream) => {\r\n          // Show stream in some <video> element.\r\n          remoteVideo.current.srcObject = remoteStream;\r\n          localVideo.current.srcObject = await getStream();\r\n          // remoteVideo.load();\r\n          // remoteVideo.play();\r\n        });\r\n\r\n        // Send messages\r\n        // conn.send(\"Hello!\");\r\n      });\r\n    });\r\n    peer.current = new Peer({\r\n      config: {\r\n        iceServers: [\r\n          { url: \"stun:stun.l.google.com:19302\" },\r\n\r\n          { url: \"stun:stunserver.org\" },\r\n        ],\r\n      },\r\n    });\r\n    peer.current.on(\"open\", function (id) {\r\n      console.log(\"My peer ID is: \" + id);\r\n      // setstate({ ...state, peerId: id });\r\n    });\r\n\r\n    peer.current.on(\"connection\", (conn) => {\r\n      console.log(`peer connected ${conn.peer}`);\r\n      setstate({ ...state, connectStatus: status.CONNECTED });\r\n      socket.current.emit(\"userConnected\", { connectedTo: conn.peer });\r\n\r\n      conn.on(\"data\", (data) => {\r\n        // Will print 'hi!'\r\n        console.log(data);\r\n      });\r\n      conn.on(\"open\", () => {\r\n        console.log(\"peer open\");\r\n        // conn.send({ peerId: peer.current.id });\r\n      });\r\n    });\r\n\r\n    peer.current.on(\"call\", async (call) => {\r\n      call.answer(await getStream()); // Answer the call with an A/V stream.\r\n      call.on(\"stream\", async (remoteStream) => {\r\n        // Show stream in some <video> element.\r\n        remoteVideo.current.srcObject = remoteStream;\r\n        localVideo.current.srcObject = await getStream();\r\n        // remoteVideo.load();\r\n        // remoteVideo.play();\r\n      });\r\n    });\r\n\r\n    peer.current.on(\"error\", (errr) => {\r\n      console.log(`peer erro ${JSON.stringify(errr)}`);\r\n    });\r\n\r\n    peer.current.on(\"disconnected\", () => {\r\n      console.log(\"peer disconnected\");\r\n      setstate({ ...state, connectStatus: status.DISCONNECTED });\r\n\r\n      initLocalVideo();\r\n      socket.current.emit(\"startDisconnect\", {\r\n        peerId: peer.current.id,\r\n      });\r\n    });\r\n\r\n    window.addEventListener(\"load\", function () {\r\n      setTimeout(function () {\r\n        // This hides the address bar:\r\n        window.scrollTo(0, 1);\r\n      }, 0);\r\n    });\r\n\r\n    return () => {\r\n      socket.current.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const startConnecting = () => {\r\n    console.log(\"start connecting\");\r\n    socket.current.emit(\"start\", {\r\n      peerId: peer.current.id,\r\n    });\r\n    setstate({ ...state, connectStatus: status.CONNECTING });\r\n  };\r\n\r\n  const startDisconnecting = () => {\r\n    // console.log(`start dis connecting ${peer.current.connections}`);\r\n    setstate({ ...state, connectStatus: status.NOTCONNECTED });\r\n    if (peer.current.connections) {\r\n      console.log(\"disconnect\");\r\n      peer.current.disconnect();\r\n    }\r\n  };\r\n\r\n  console.log(`sate ${JSON.stringify(state)}`);\r\n\r\n  return (\r\n    <div className=\"w-screen h-screen flex flex-col bg-black  \">\r\n      <div className=\"flex w-full h-full relative flex-1 overflow-x-hidden\">\r\n        <video\r\n          autoPlay\r\n          id=\"remote-video\"\r\n          className=\"w-full h-full videoback object-cover\"\r\n          width=\"100\"\r\n          height=\"100\"\r\n        />\r\n\r\n        {state.connectStatus == status.NOTCONNECTED && (\r\n          <div className=\"opacity-80 w-full h-full flex flex-col items-center justify-center space-y-9 absolute\">\r\n            <h1 className=\"text-5xl lg:font-6xl font-bold text-red-500 \">\r\n              Flirt Me Baby\r\n            </h1>\r\n            <h2 className=\"text-white font-extrabold\">\r\n              856,546 joined Flirt Me Baby\r\n            </h2>\r\n            <div className=\"flex flex-row w-full justify-center space-x-3\">\r\n              <div\r\n                className=\" p-2 cursor-pointer rounded-lg shadow-md bg-gray-100 text-black text-base font-bold w-1/3 flex items-center justify-center\"\r\n                onClick={() => setselectGender(!selectGender)}\r\n              >\r\n                I AM : {profile.gender}\r\n              </div>\r\n              <div\r\n                className=\"p-2 cursor-pointer rounded-lg shadow-md bg-blue-500 text-white text-base font-bold w-1/3 flex items-center justify-center\"\r\n                onClick={() => startConnecting()}\r\n              >\r\n                <FaPlay size={25} className=\"text-white mr-3\" />\r\n                {\"   \"} Start\r\n              </div>\r\n            </div>\r\n            <div className=\"flex bg-white rounded-lg p-1 items-center mt-5\">\r\n              <Switch\r\n                checked={state.checkedB}\r\n                onChange={(e) => {\r\n                  setprofile({ ...profile, terms: e.target.checked });\r\n                }}\r\n                color=\"primary\"\r\n                name=\"checkedA\"\r\n                inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n              />\r\n              <p>\r\n                I certify I have read and agree to the <u>Terms of Use</u> and\r\n                Guidelines.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* <div className=\"hidden absolute w-full lg:flex bg-dark-gray  items-center bg-gray-900 p-5 justify-around\">\r\n            <img src={AndroidIcon} className=\"w-48 h-20\" />\r\n            <img src={IosIcon} className=\"w-48 h-20\" />\r\n          </div> */}\r\n\r\n        <div className=\"absolute bg-transparent w-1/3 h-1/3 bottom-0 right-0\">\r\n          <video\r\n            autoPlay\r\n            id=\"local-video\"\r\n            className=\"w-full h-full min-h-full  bg-transparent object-cover \"\r\n            style={{\r\n              visibility:\r\n                state.connectStatus == status.CONNECTED ? \"visible\" : \"hidden\",\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        {state.connectStatus !== status.NOTCONNECTED && (\r\n          <div className=\" absolute w-full bottom-0\">\r\n            <div className=\"flex justify-center \">\r\n              <div\r\n                className=\"bg-red-500 m-2 rounded-full cursor-pointer\"\r\n                onClick={startDisconnecting}\r\n              >\r\n                <FaRegStopCircle size={60} color=\"white\" className=\"p-2\" />\r\n              </div>\r\n              <div className=\"bg-blue-600 m-2 rounded-full cursor-pointer\">\r\n                <FaArrowAltCircleRight\r\n                  size={60}\r\n                  color=\"white\"\r\n                  className=\"p-2\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"bg-gray-400\">\r\n        <div className=\"flex flex-row items-center justify-between mx-2 mt-1\">\r\n          <BsGearFill size={30} className=\"cursor-pointer\" />\r\n          <div className=\"flex flex-row flex-grow m-2 p-1 items-center\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"border-b p-2 flex-grow mx-2 rounded-md focus:outline-none text-base font-bold \"\r\n              placeholder=\"Write message here ...\"\r\n            />\r\n            <div className=\"cursor-pointer bg-blue-600 p-2 rounded-3xl text-white\">\r\n              <FaArrowRight size={25} color=\"white\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VideoPage;\r\n","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\pages\\MainPage.js",[],"D:\\React\\JS\\Flirt_Me_Video_Call\\src\\pages\\ContactPage.js",[],"D:\\React\\JS\\Flirt_Me_Video_Call\\src\\Components\\SelectGenderComponent.js",["59","60","61","62"],"import React from \"react\";\r\nimport { FaSkullCrossbones } from \"react-icons/fa\";\r\nimport MaleIcon from \"../assets/images/malel.png\";\r\nimport FemaleIcon from \"../assets/images/femalel.png\";\r\nimport GenOIcon from \"../assets/images/genderO.png\";\r\n\r\nfunction SelectGenderComponent() {\r\n  return (\r\n    <div className=\" w-full h-full\">\r\n      <div className=\"flex flex-col items-center \">\r\n        <h1 className=\"text-blue-600 text-2xl mb-4 font-bold\">\r\n          Select your gender\r\n        </h1>\r\n        <div className=\"flex flex-row items-center justify-start rounded-lg shadow-lg bg-gray-300 mx-3 my-1 p-1 w-full hover:bg-gray-400\">\r\n          <img src={MaleIcon} className=\"w-16 h-14 object-cover\" />\r\n          <h1 className=\"text-lg font-bold text-black \">Male</h1>\r\n        </div>\r\n        <div className=\"flex flex-row items-center justify-start rounded-lg shadow-lg bg-gray-300 mx-3 my-1 p-1 w-full hover:bg-gray-400\">\r\n          <img src={FemaleIcon} className=\"w-16 h-14 object-cover\" />\r\n          <h1 className=\"text-lg font-bold text-black\">Female</h1>\r\n        </div>\r\n        <div className=\"flex flex-row items-center justify-start rounded-lg shadow-lg bg-gray-300 mx-3 my-1 p-1 w-full hover:bg-gray-400\">\r\n          <img src={GenOIcon} className=\"w-16 h-14 object-fill\" />\r\n          <h1 className=\"text-lg font-bold text-black\">Other</h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectGenderComponent;\r\n","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\Components\\LoginRegisterComponent.js",["63"],"import React, { useState } from \"react\";\r\nimport ComponentAuthButton from \"./ComponentAuthButton\";\r\nimport { FaFacebook, FaGoogle, FaEnvelope, FaUserAlt } from \"react-icons/fa\";\r\nimport ReactFacebookLogin from \"react-facebook-login\";\r\nimport AxiosInstance from \"../utils/AxiosInstance\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport { Switch } from \"@material-ui/core\";\r\nimport FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\r\n\r\nfunction LoginRegisterComponent() {\r\n  const responseFacebook = async (res) => {\r\n    console.log(res);\r\n    const user = {\r\n      name: res.name,\r\n      email: res.email,\r\n      signupType: \"Facebook\",\r\n      password: res.accessToken,\r\n      userId: res.userID,\r\n      accessToken: res.signedRequest,\r\n      picture: res.picture.data.url,\r\n    };\r\n\r\n    const result = await AxiosInstance.post(\"auth/fbRegister\", user, null);\r\n\r\n    console.log(`result ${JSON.stringify(result)}`);\r\n  };\r\n\r\n  const [Term, setTerm] = useState(false);\r\n  const [LogWithEmail, setLogWithEmail] = useState(false);\r\n\r\n  const responseGoogle = async (res) => {\r\n    console.log(res.getBasicProfile().getName());\r\n    const profile = res.getBasicProfile();\r\n    const user = {\r\n      name: profile.getName(),\r\n      email: profile.getEmail(),\r\n      signupType: \"Google\",\r\n      password: res.getAuthResponse().id_token,\r\n      userId: profile.getId(),\r\n      picture: profile.getImageUrl(),\r\n    };\r\n\r\n    const result = await AxiosInstance.post(\"auth/gRegister\", user, null);\r\n\r\n    console.log(`result ${JSON.stringify(result)}`);\r\n  };\r\n  const responseGoogleFailed = (res) => {\r\n    console.log(res);\r\n  };\r\n\r\n  return (\r\n    <div className=\"m-0 p-0 w-full h-full items-center flex flex-col\">\r\n      <div className=\"flex flex-col items-center w-full \">\r\n        <h1 className=\"text-2xl text-center mb-4 font-bold text-blue-600 \">\r\n          It’s Easy to Join {process.env.REACT_APP_NAME}, Get Started Now\r\n        </h1>\r\n        <FacebookLogin\r\n          size=\"metro\"\r\n          appId=\"248937180191492\"\r\n          autoLoad={false}\r\n          fields=\"name,email,picture,gender\"\r\n          callback={responseFacebook}\r\n          // scope=\"public_profile,user_gender,user_location,user_age_range\"\r\n          cssClass=\"w-full\"\r\n          render={(renderProps) => (\r\n            <ComponentAuthButton\r\n              onClick={renderProps.onClick}\r\n              Img={FaFacebook}\r\n              text=\"Login with facebook\"\r\n            />\r\n          )}\r\n        />\r\n        <GoogleLogin\r\n          clientId=\"124894798621-0k0luoftgnqo07b30fi5kk5jnntos05p.apps.googleusercontent.com\"\r\n          render={(renderProps) => (\r\n            <ComponentAuthButton\r\n              onClick={renderProps.onClick}\r\n              disabled={renderProps.disabled}\r\n              Img={FaGoogle}\r\n              text=\"Login with google\"\r\n            />\r\n          )}\r\n          onSuccess={responseGoogle}\r\n          onFailure={responseGoogleFailed}\r\n          cookiePolicy={\"single_host_origin\"}\r\n        />\r\n        <div onClick={() => setLogWithEmail(!LogWithEmail)}>\r\n          <ComponentAuthButton Img={FaEnvelope} text=\"Login with email\" />\r\n        </div>\r\n      </div>\r\n\r\n      {LogWithEmail && (\r\n        <div className=\"flex flex-col items-center\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"border rounded-full p-2 m-2 font-semibold  focus:outline-none bg-gray-300 text-white text-lg focus:bg-white focus:text-gray-700 \"\r\n            placeholder=\"Enter Your Name ..\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            className=\"border rounded-full p-2 m-2 font-semibold  focus:outline-none bg-gray-300 text-white text-lg focus:bg-white focus:text-gray-700 \"\r\n            placeholder=\"email@address.com\"\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            className=\"border rounded-full p-2 m-2 font-semibold focus:outline-none bg-gray-300 text-white text-lg focus:bg-white focus:text-gray-700 \"\r\n            placeholder=\"Password\"\r\n          />\r\n          <div className=\"flex bg-white rounded-lg p-1 items-center mt-5\">\r\n            <Switch\r\n              checked={Term}\r\n              onChange={(e) => {\r\n                setTerm(e.target.checked);\r\n              }}\r\n              color=\"primary\"\r\n              name=\"checkedA\"\r\n              inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n            />\r\n            <p className=\"text-base font-medium\">\r\n              I certify I have read and agree to textShadow\r\n              <p>\r\n                <u>Terms of Use</u>\r\n              </p>\r\n            </p>\r\n          </div>\r\n          <div\r\n            className=\"m-2 p-2 px-5 rounded-lg bg-blue-700 text-lg font-bold text-white uppercase\r\n        hover:bg-blue-600 shadow-xl\"\r\n          >\r\n            join for free\r\n          </div>\r\n          <div className=\"m-2\">\r\n            Already a Member?{\" \"}\r\n            <span className=\"hover:text-blue-600 font-semibold\">\r\n              Log in Here\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"flex flex-row items-center mt-2\">\r\n        <FaUserAlt size={15} color=\"black\" />\r\n        <p>\r\n          {\"  \"}\r\n          <span className=\"text-sm font-bold ml-2\">989 222</span>\r\n          {\"  \"}joined {process.env.REACT_APP_NAME}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginRegisterComponent;\r\n","D:\\React\\JS\\Flirt_Me_Video_Call\\src\\Components\\ComponentAuthButton.js",[],"D:\\React\\JS\\Flirt_Me_Video_Call\\src\\utils\\AxiosInstance.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":2,"column":8,"nodeType":"70","messageId":"71","endLine":2,"endColumn":16},{"ruleId":"68","severity":1,"message":"72","line":1,"column":46,"nodeType":"70","messageId":"71","endLine":1,"endColumn":56},{"ruleId":"68","severity":1,"message":"73","line":5,"column":8,"nodeType":"70","messageId":"71","endLine":5,"endColumn":13},{"ruleId":"68","severity":1,"message":"74","line":6,"column":8,"nodeType":"70","messageId":"71","endLine":6,"endColumn":13},{"ruleId":"68","severity":1,"message":"75","line":7,"column":8,"nodeType":"70","messageId":"71","endLine":7,"endColumn":29},{"ruleId":"68","severity":1,"message":"76","line":16,"column":8,"nodeType":"70","messageId":"71","endLine":16,"endColumn":19},{"ruleId":"68","severity":1,"message":"77","line":17,"column":8,"nodeType":"70","messageId":"71","endLine":17,"endColumn":15},{"ruleId":"68","severity":1,"message":"78","line":18,"column":8,"nodeType":"70","messageId":"71","endLine":18,"endColumn":30},{"ruleId":"68","severity":1,"message":"79","line":46,"column":9,"nodeType":"70","messageId":"71","endLine":46,"endColumn":21},{"ruleId":"68","severity":1,"message":"80","line":60,"column":10,"nodeType":"70","messageId":"71","endLine":60,"endColumn":25},{"ruleId":"68","severity":1,"message":"81","line":60,"column":27,"nodeType":"70","messageId":"71","endLine":60,"endColumn":45},{"ruleId":"82","severity":1,"message":"83","line":257,"column":6,"nodeType":"84","endLine":257,"endColumn":8,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":289,"column":30,"nodeType":"88","messageId":"89","endLine":289,"endColumn":32},{"ruleId":"86","severity":1,"message":"87","line":342,"column":37,"nodeType":"88","messageId":"89","endLine":342,"endColumn":39},{"ruleId":"68","severity":1,"message":"90","line":2,"column":10,"nodeType":"70","messageId":"71","endLine":2,"endColumn":27},{"ruleId":"91","severity":1,"message":"92","line":15,"column":11,"nodeType":"93","endLine":15,"endColumn":68},{"ruleId":"91","severity":1,"message":"92","line":19,"column":11,"nodeType":"93","endLine":19,"endColumn":70},{"ruleId":"91","severity":1,"message":"92","line":23,"column":11,"nodeType":"93","endLine":23,"endColumn":67},{"ruleId":"68","severity":1,"message":"94","line":4,"column":8,"nodeType":"70","messageId":"71","endLine":4,"endColumn":26},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'MainPage' is defined but never used.","Identifier","unusedVar","'StyleSheet' is defined but never used.","'Giphy' is defined but never used.","'Rodal' is defined but never used.","'SelectGenderComponent' is defined but never used.","'AndroidIcon' is defined but never used.","'IosIcon' is defined but never used.","'LoginRegisterComponent' is defined but never used.","'customStyles' is assigned a value but never used.","'toggleAuthModel' is assigned a value but never used.","'settoggleAuthModel' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getStream', 'initVideo', 'state', 'status.CONNECTED', and 'status.DISCONNECTED'. Either include them or remove the dependency array. You can also do a functional update 'setstate(s => ...)' if you only need 'state' in the 'setstate' call.","ArrayExpression",["97"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'FaSkullCrossbones' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ReactFacebookLogin' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},"Update the dependencies array to be: [getStream, initVideo, state, status.CONNECTED, status.DISCONNECTED]",{"range":"100","text":"101"},[7744,7746],"[getStream, initVideo, state, status.CONNECTED, status.DISCONNECTED]"]